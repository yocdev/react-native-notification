<manifest xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:tools="http://schemas.android.com/tools"
  package="me.youchai.rnpush">

  <permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />


  <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />


  <permission
    android:name="${applicationId}.permission.JPUSH_MESSAGE"
    android:protectionLevel="signature" />
  <uses-permission android:name="${applicationId}.permission.JPUSH_MESSAGE" />

  <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
  <uses-permission android:name="android.permission.INTERNET" />
  <uses-permission android:name="android.permission.READ_PHONE_STATE" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
  <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

  <!-- Optional. Required for location feature -->
  <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
  <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /> <!-- 用于开启 debug 版本的应用在 6.0 系统上的层叠窗口权限 -->
  <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
  <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
  <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
  <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
  <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
  <uses-permission android:name="android.permission.GET_TASKS" />
  <uses-permission android:name="android.permission.VIBRATE" />

  <application>

    <!-- mipush -->
    <service
      android:name="com.xiaomi.push.service.XMPushService"
      android:enabled="true"
      android:process=":pushservice" />
    <service
      android:name="com.xiaomi.push.service.XMJobService"
      android:enabled="true"
      android:exported="false"
      android:permission="android.permission.BIND_JOB_SERVICE"
      android:process=":pushservice" />
    <!--注：此 service 必须在 3.0.1 版本以后（包括 3.0.1 版本）加入-->
    <service
      android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
      android:enabled="true"
      android:exported="true" />
    <service
      android:name="com.xiaomi.mipush.sdk.MessageHandleService"
      android:enabled="true" />
    <!--注：此 service 必须在 2.2.5 版本以后（包括 2.2.5 版本）加入-->
    <receiver
      android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
      android:exported="true">
      <intent-filter>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
        <category android:name="android.intent.category.DEFAULT" />
      </intent-filter>
    </receiver>
    <receiver
      android:name="com.xiaomi.push.service.receivers.PingReceiver"
      android:exported="false"
      android:process=":pushservice">
      <intent-filter>
        <action android:name="com.xiaomi.push.PING_TIMER" />
      </intent-filter>
    </receiver>

    <receiver
      android:name="me.youchai.rnpush.mipush.MiPushReceiver"
      android:exported="true">
      <intent-filter>
        <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
      </intent-filter>
      <intent-filter>
        <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
      </intent-filter>
      <intent-filter>
        <action android:name="com.xiaomi.mipush.ERROR" />
      </intent-filter>
    </receiver>

    <!-- jpush -->
    <!-- since 3.3.0 Required SDK 核心功能-->
    <!-- 可配置android:process参数将PushService放在其他进程中 -->
    <!--User defined.  For test only 继承自cn.jpush.android.service.JCommonService-->
    <service
      android:name="cn.jpush.android.service.JCommonService"
      android:enabled="true"
      android:exported="false"
      android:process=":pushcore">
      <intent-filter>
        <action android:name="cn.jiguang.user.service.action" />
      </intent-filter>
    </service>

    <!-- User defined.  For test only  用户自定义接收消息器,3.0.7开始支持,目前新tag/alias接口设置结果会在该广播接收器对应的方法中回调-->
    <!--since 3.3.0 接收JPush相关事件-->
    <receiver
      android:name=".jpush.JPushReceiver"
      android:enabled="true"
      android:exported="false">
      <intent-filter>
        <action android:name="cn.jpush.android.intent.RECEIVE_MESSAGE" />
        <category android:name="${applicationId}" />
      </intent-filter>
    </receiver>

    <!-- Rich push 核心功能 since 2.0.6 -->
    <activity
      android:name="cn.jpush.android.ui.PopWinActivity"
      android:exported="true"
      android:theme="@style/MyDialogStyle">
      <intent-filter>
        <category android:name="android.intent.category.DEFAULT" />

        <action android:name="cn.jpush.android.ui.PopWinActivity" />

        <category android:name="${JPUSH_PKGNAME}" />
      </intent-filter>
    </activity>

    <!-- Required SDK核心功能 -->
    <activity
      android:name="cn.jpush.android.ui.PushActivity"
      android:configChanges="orientation|keyboardHidden"
      android:exported="true"
      android:theme="@android:style/Theme.NoTitleBar">
      <intent-filter>
        <action android:name="cn.jpush.android.ui.PushActivity" />

        <category android:name="android.intent.category.DEFAULT" />
        <category android:name="${JPUSH_PKGNAME}" />
      </intent-filter>
    </activity>

    <!-- since 3.5.0 Required SDK 核心功能 -->
    <!-- 3.5.0新增，用于定时展示功能 -->
    <receiver
      android:name="cn.jpush.android.service.SchedulerReceiver"
      android:exported="false" />

    <!-- since 3.0.9 Required SDK 核心功能 -->
    <provider
      android:name="cn.jpush.android.service.DataProvider"
      android:authorities="${JPUSH_PKGNAME}.DataProvider"
      android:exported="false"
      android:process=":pushcore" />
    <!-- since 3.1.0 Required SDK 核心功能 -->
    <provider
      android:name="cn.jpush.android.service.DownloadProvider"
      android:authorities="${JPUSH_PKGNAME}.DownloadProvider"
      android:exported="true" />

    <!-- since 3.3.0 Required SDK核心功能 -->
    <activity
      android:name="cn.jpush.android.service.JNotifyActivity"
      android:exported="true"
      android:taskAffinity="jpush.custom"
      android:theme="@android:style/Theme.Translucent.NoTitleBar">
      <intent-filter>
        <action android:name="cn.jpush.android.intent.JNotifyActivity" />

        <category android:name="android.intent.category.DEFAULT" />

        <category android:name="${applicationId}" />
      </intent-filter>
    </activity>
    <!-- since 3.5.6 新增华硕通道 -->
    <receiver
      android:name="cn.jpush.android.asus.AsusPushMessageReceiver"
      android:exported="false" />

    <!-- Required SDK 核心功能 -->
    <!-- 可配置android:process参数将PushService放在其他进程中 -->
    <service
      android:name="cn.jpush.android.service.PushService"
      android:enabled="true"
      android:exported="false"
      android:process=":pushcore">
      <intent-filter>
        <action android:name="cn.jpush.android.intent.REGISTER" />
        <action android:name="cn.jpush.android.intent.REPORT" />
        <action android:name="cn.jpush.android.intent.PushService" />
        <action android:name="cn.jpush.android.intent.PUSH_TIME" />
      </intent-filter>
    </service>

    <!-- Required SDK核心功能 -->
    <receiver
      android:name="cn.jpush.android.service.PushReceiver"
      android:enabled="true">
      <intent-filter android:priority="1000">
        <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" /> <!-- Required  显示通知栏 -->
        <category android:name="${JPUSH_PKGNAME}" />
      </intent-filter>
      <intent-filter>
        <action android:name="android.intent.action.USER_PRESENT" />
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
      </intent-filter>
      <!-- Optional -->
      <intent-filter>
        <action android:name="android.intent.action.PACKAGE_ADDED" />
        <action android:name="android.intent.action.PACKAGE_REMOVED" />

        <data android:scheme="package" />
      </intent-filter>
    </receiver>

    <!-- Required SDK核心功能 -->
    <receiver
      android:name="cn.jpush.android.service.AlarmReceiver"
      android:exported="false" />

    <!-- Huawei -->
    <!--    <activity-->
    <!--        android:name="com.huawei.hms.activity.BridgeActivity"-->
    <!--        android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"-->
    <!--        android:excludeFromRecents="true"-->
    <!--        android:exported="false"-->
    <!--        android:hardwareAccelerated="true"-->
    <!--        android:theme="@android:style/Theme.Translucent" >-->
    <!--      <meta-data-->
    <!--          android:name="hwc-theme"-->
    <!--          android:value="androidhwext:style/Theme.Emui.Translucent" />-->
    <!--    </activity>-->
    <!--    <receiver android:name=".huawei.HuaweiPushReceiver" >-->
    <!--      <intent-filter>-->
    <!--        &lt;!&ndash; 必须,用于接收 TOKEN &ndash;&gt;-->
    <!--        <action android:name="com.huawei.android.push.intent.REGISTRATION" />-->
    <!--        &lt;!&ndash; 必须，用于接收消息 &ndash;&gt;-->
    <!--        <action android:name="com.huawei.android.push.intent.RECEIVE" />-->
    <!--        &lt;!&ndash; 可选，用于点击通知栏或通知栏上的按钮后触发 onEvent 回调 &ndash;&gt;-->
    <!--        <action android:name="com.huawei.android.push.intent.CLICK" />-->
    <!--        &lt;!&ndash; 可选，查看 PUSH 通道是否连接，不查看则不需要 &ndash;&gt;-->
    <!--        <action android:name="com.huawei.intent.action.PUSH_STATE" />-->
    <!--      </intent-filter>-->
    <!--    </receiver>-->
    <!--    <receiver android:name="com.huawei.hms.support.api.push.PushEventReceiver" >-->
    <!--      <intent-filter>-->
    <!--        &lt;!&ndash; 接收通道发来的通知栏消息，兼容老版本 PUSH &ndash;&gt;-->
    <!--        <action android:name="com.huawei.intent.action.PUSH" />-->
    <!--      </intent-filter>-->
    <!--    </receiver>-->

  </application>

</manifest>
